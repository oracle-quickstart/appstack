# Copyright (c) 2023, Oracle and/or its affiliates.
# Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl.
# This workflow will build and push a Java application to OCI when a commit is 
# pushed to your default branch.
version: 0.1
component: build
timeoutInSeconds: 3600
shell: bash
env:
  variables:
    JAVA_HOME : "/usr/java/latest"
  vaultVariables:
    DB_USER_PASSWORD : "${db_user_password}"
    WALLET_PASSWORD : "${wallet_password}"
steps: 
  - type: Command
    name: Install Java
    timeoutInSeconds: 600
    failImmediatelyOnError: true
    command: |
      yum --enablerepo=ol7_oci_included clean metadata
      yum install -y jdk-17
    onFailure:
      - type: Command
        command: |
          echo $JAVA_HOME
        timeoutInSeconds: 400
  - type: Command
    name: Build application
    timeoutInSeconds: 600
    failImmediatelyOnError: true
    command: |
      cd $${OCI_WORKSPACE_DIR}/${repo_name}
      ${build_command}
    onFailure:
      - type: Command
        command: |
          pwd
        timeoutInSeconds: 400
  - type: Command
    name: Create config files
    timeoutInSeconds: 600
    failImmediatelyOnError: true
    command: |
      cd $${OCI_WORKSPACE_DIR}/${config_repo_name}
      unzip wallet.zip -d wallet
  - type: Command
    name: Download oraclepki and add username and password to wallet
    timeoutInSeconds: 300
    failImmediatelyOnError: true
    command: |
      cd $${OCI_WORKSPACE_DIR}/${config_repo_name}
      curl -o oraclepki.jar "https://repo1.maven.org/maven2/com/oracle/database/security/oraclepki/23.2.0.0/oraclepki-23.2.0.0.jar" -L
      echo -e '#/bin/sh\njava -cp oraclepki.jar oracle.security.pki.OracleSecretStoreTextUI -wrl wallet -createCredential "${db_connection_url}" "${db_username}" "'$${DB_USER_PASSWORD}'" <<EOF\n'$${WALLET_PASSWORD}'\nEOF' >> add-credential-wallet.sh
      sh add-credential-wallet.sh
  - type: Command
    name: Get JAR file
    timeoutInSeconds: 600
    failImmediatelyOnError: true
    command: |
      cd $${OCI_WORKSPACE_DIR}/${config_repo_name}
      cp $${OCI_WORKSPACE_DIR}/${repo_name}/${artifact_location} ./${fileName}
  - type: Command
    name: Build Docker image
    timeoutInSeconds: 600
    failImmediatelyOnError: true
    command: |
      cd $${OCI_WORKSPACE_DIR}/${repo_name}
      export commit=$(git rev-list --all --max-count=1 --abbrev-commit)
      cd $${OCI_WORKSPACE_DIR}/${config_repo_name}
      docker build . --file Dockerfile --tag ${image_remote_tag}:${image_tag}-$commit --tag ${image_latest_tag}
outputArtifacts:
  - name: application_image
    type: DOCKER_IMAGE
    location: ${image_latest_tag}